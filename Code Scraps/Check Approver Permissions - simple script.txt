import com.atlassian.jira.component.ComponentAccessor

def groupManager = ComponentAccessor.getGroupManager()
//groupManager.isUserInGroup(currentUser?.name, 'jira_mrb')
String value = cfValues['Approve Dispositon']?.value as String

(value == 'Manufacturing Engineering' && groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-mfgeng')) || 
    (value == 'Quality Engineering' && groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-quality')) ||
    (value == 'Design Engineering' && groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-designeng')) ||
    (value == 'Operations' && groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-dirofops')) ||
    (value == 'Materials' && groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-materials')) 
	
	
	
import com.atlassian.jira.component.ComponentAccessor

def groupManager = ComponentAccessor.getGroupManager()
//groupManager.isUserInGroup(currentUser?.name, 'jira_mrb')
String value = cfValues['Approve Dispositon']?.value as String

(value == 'Manufacturing Engineering' && isUserMemberOfRole('Engineering - Manufacturing')) || 
    (value == 'Quality Engineering' && isUserMemberOfRole('Quality')) ||
    (value == 'Design Engineering' && isUserMemberOfRole('Enginerring - Design')) ||
    (value == 'Operations' && isUserMemberOfRole('Operations')) ||
    (value == 'Materials' && isUserMemberOfRole('Materials'))




import com.atlassian.jira.component.ComponentAccessor

def groupManager = ComponentAccessor.getGroupManager()
//groupManager.isUserInGroup(currentUser?.name, 'jira_mrb')
String value = cfValues['Approve Dispositon']?.value as String
if (value == 'Manufacturing Engineering')
{
    if (isUserMemberOfRole('Engineering - Manufacturing'))
    {
    	return true
    }
}
else if (value == 'Quality Engineering')
{
    if (isUserMemberOfRole('Quality'))
    {
    	return true
    }
}
else if (value == 'Design Engineering')
{
    if (isUserMemberOfRole('Enginerring - Design'))
    {
    	return true
    }
}
else if (value == 'Operations')
{
    if (isUserMemberOfRole('Operations'))
    {
    	return true
    } 
}
else if (value == 'Materials')
{
    if (isUserMemberOfRole('Materials'))
    {
    	return true
    } 
}
else
{
    return false
}



import com.atlassian.jira.component.ComponentAccessor

def groupManager = ComponentAccessor.getGroupManager()
//groupManager.isUserInGroup(currentUser?.name, 'jira_mrb')
String value = cfValues['Approve Dispositon']?.value as String
if (value == 'Manufacturing Engineering')
{
    if (isUserMemberOfRole('Engineering - Manufacturing'))
    {
    	return true
    }
}
else if (value == 'Quality Engineering')
{
    if (isUserMemberOfRole('Quality'))
    {
    	return true
    }
}
else if (value == 'Design Engineering')
{
    if (isUserMemberOfRole('Enginerring - Design'))
    {
    	return true
    }
}
else if (value == 'Operations')
{
    if (isUserMemberOfRole('Operations'))
    {
    	return true
    } 
}
else if (value == 'Materials')
{
    if (isUserMemberOfRole('Materials'))
    {
    	return true
    } 
}
else
{
    return false
}






import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.Issue;
import java.text.SimpleDateFormat
def customFieldManager = ComponentAccessor.getCustomFieldManager()
def issueManager = ComponentAccessor.getIssueManager()
def groupManager = ComponentAccessor.getGroupManager()
def currentUser = ComponentAccessor.getJiraAuthenticationContext().getLoggedInUser()
def fullName = currentUser.displayName

def date = new Date()
sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss")
def value = issue.getCustomFieldValue(customFieldManager.getCustomFieldObject('customfield_13016')).getValue()

if (value == "Manufacturing")
{
    if (groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-mfgeng'))
    {
      	def cf = customFieldManager.getCustomFieldObjectByName("Mfg Eng Approval")
      	issue.setCustomFieldValue(cf,fullName.toString() + " "+ sdf.format(date))
    	return true
    }
    else
	{
    	return false
	}
}
else if (value == "Quality")
{
    if (groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-quality'))
    {
      	def cf = customFieldManager.getCustomFieldObjectByName("Quality Approval")
      	issue.setCustomFieldValue(cf,fullName.toString() + " "+ sdf.format(date))
    	return true
    }
    else
	{
    	return false
	}
}
else if (value == 'Design')
{
    if (groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-designeng'))
    {
      	def cf = customFieldManager.getCustomFieldObjectByName("Design Eng Approval")
      	issue.setCustomFieldValue(cf,fullName.toString() + " "+ sdf.format(date))
    	return true
    }
    else
	{
    	return false
	}
}
else if (value == 'Operations')
{
    if (groupManager.isUserInGroup(currentUser?.name, 'jira-operations'))
    {
      	def cf = customFieldManager.getCustomFieldObjectByName("Ops Approval")
      	issue.setCustomFieldValue(cf,fullName.toString() + " "+ sdf.format(date))
    	return true
    } 
    else
	{
    	return false
	}
}
else if (value == 'Materials')
{
    if (groupManager.isUserInGroup(currentUser?.name, 'jira-mrb-materials'))
    {
      	def cf = customFieldManager.getCustomFieldObjectByName("Material Approval")
      	issue.setCustomFieldValue(cf,fullName.toString() + " "+ sdf.format(date))
    	return true
    } 
    else
	{
    	return false
	}
}
else
{
    return false
}